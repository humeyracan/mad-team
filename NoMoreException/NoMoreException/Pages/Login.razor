@page "/login"
@inject NavigationManager NavigationManager
@using BusinessLayer.Dtos
@inject UserController controller
@inject AlertService AlertService
@using NoMoreException.Services


<AuthorizeView>
    <Authorized>
        @if (true) { NavigationManager.NavigateTo("/"); }
    </Authorized>
</AuthorizeView>

<div class="container" style="margin-top:5%;">
    <div class="row">
        <div class="col-md-5 mx-auto login-form-border" style="max-width:30%;">
            <div id="first">
                <div class="myform form ">
                    <div class="logo mb-3">
                        <div class="col-md-12 text-center">
                            <h3 style="color: #198754;">No</h3>
                            <h3 style="color: #ea868f;">More</h3>
                            <h3 style="color: #6f42c1;">Exception</h3>
                        </div>
                    </div>
                    <EditForm Model="@User" OnValidSubmit="@OnValidSubmit">
                        <DataAnnotationsValidator />
                        <div class="form-group">
                            <div class="input-group mb-2">
                                <div class="input-group-append">
                                    <span class="input-group-text"><i class="oi oi-person"></i></span>
                                </div>
                                <InputText type="username" name="username" class="form-control" aria-describedby="usernameHelp" id="username" @bind-Value="User.Username" placeholder="Username" />
                                </div>
                                <ValidationMessage For="@(() => User.Username)" />
                            </div>
                            <div class="form-group">
                                <div class="input-group mb-2">
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="oi-key oi"></i></span>
                                    </div>
                                    <InputText @bind-Value="User.Password" type="password" name="password" id="password" class="form-control" aria-describedby="passwordHelp" placeholder="Password"></InputText>

                                </div>
                                <ValidationMessage For="@(() => User.Password)" />
                            </div>
                            <div class="col-md-12" style="padding:0 !important;">
                                <div class="col-md-4" style="padding:0 !important;">

                                    @*<div class="rightbottom" >
            <div class="col-md-auto" style="padding:0 !important;">*@
                                    <button type="submit" disabled="@loading" class="btn btn-block mybtn btn-dark tx-tfm">
                                        @if (loading)
                                        {
                                            <span class="spinner-border spinner-border-sm mr-1"></span>}
                                        Login
                                    </button>
                                </div>
                            </div>
</EditForm>
                    
                </div>
            </div>
        </div>
    </div>
</div>


@code {

    private UserDto User = new UserDto();
    private bool loading;

    private async void OnValidSubmit()
    {
        // reset alerts on submit
        AlertService.Clear();

        loading = true;
        try
        {
            await ServiceProvider.Get<AuthUserService>().LoginAsync(User);
            AlertService.Success("ecem başarılı");
            StateHasChanged();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }

    }
}