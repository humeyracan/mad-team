@page "/labeldata"

@using NoMoreException.ExampleData
@using BusinessLayer.Dtos
@inject LabelService labelService

<h3>Label</h3>

@if (labelDto == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Text</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@labelDto.Id</td>
                <td>@labelDto.Text</td>
            </tr>

            @*@foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }*@
        </tbody>
    </table>
}

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label asp-for="Text" class="control-label">Text</label>
                <input for="Text" class="form-control" @bind(lbl.Text) />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-default" @onclick(async ()=> await CreateLabel())>Save</button>
                <button class="btn" @onclick(cancel)>Cancel</button>
            </div>
        </form>
    </div>
</div>

@code {
    private LabelDto labelDto;

    protected override async Task OnInitializedAsync()
    {
        labelDto = await labelService.GetLabelAsync();
    }
@functions {
    LabelDto lbl = new LabelDto();

    protected async Task CreateLabel()
    {
        lbl.Text = "added";
        await labelService.AddLabelAsync(lbl);
    }
}

}


